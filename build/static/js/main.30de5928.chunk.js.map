{"version":3,"sources":["consts.js","utilities/add.js","utilities/edit.js","utilities/delete.js","utilities/package.js","utilities/htmlFile.js","utilities/IndexFile.js","utilities/main.js","utilities/app.js","utilities/env.js","pages/index.js","Routes/publicRoutes.js","components/NavBar/index.js","components/Layout/index.js","Routes/index.js","App.js","index.js"],"names":["formIoData","display","components","label","tableView","validate","customMessage","minLength","maxLength","errorLabel","key","type","input","addComponentCode","json","formObj","reduce","accumulater","currentValue","replaceAll","concat","JSON","stringify","length","map","item","index","inputType","requiredMarkup","required","React","createElement","style","color","data","values","itm","value","_item$values","join","editComponentCode","ele","deleteComponentCode","packageData","htmlFile","IndexFile","mainIndexFile","app","envComponentCode","Main","formData","setFormData","useState","setJsonToBackend","async","replace","console","log","result","getCircularReplacer","seen","WeakSet","has","add","axios","post","parse","then","response","firstName","window","location","href","catch","error","downloadDynamicCode","zip","JSZip","file","content","generateAsync","link","document","URL","createObjectURL","download","click","textAlign","className","onClick","printResult","Formio","createForm","getElementById","form","uniqueFieldMake","component","i","count","filter","element","j","on","id","FormBuilderIo","saveForm","PublicRoutes","Fragment","Routes","Route","path","ResponsiveAppBar","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","AppBar","position","Container","maxWidth","Toolbar","disableGutters","AdbIcon","sx","xs","md","mr","fontSize","Typography","variant","noWrap","fontFamily","fontWeight","letterSpacing","textDecoration","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","event","currentTarget","MenuIcon","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","handleCloseNavMenu","Tooltip","title","mt","handleCloseUserMenu","Layout","_ref","children","Index","App","rootElement","ReactDOM","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.30de5928.chunk.js","sourcesContent":["export const formIoData = {\r\n  display: \"form\",\r\n  components: [\r\n    {\r\n      label: \"Text Field\",\r\n      tableView: true,\r\n      validate: {\r\n        customMessage: \"Test error\",\r\n        minLength: 3,\r\n        maxLength: 10,\r\n      },\r\n      errorLabel: \"Please fill in only letters.\",\r\n      key: \"textField\",\r\n      type: \"textfield\",\r\n      input: true,\r\n    }\r\n  ],\r\n};\r\n","import React from \"react\";\nconst addComponentCode = (json) => {\n\n  let formObj = () => {\n    return json.reduce((accumulater, currentValue) => {\n      if (currentValue.type == \"datetime\") {\n        accumulater[currentValue.label.replaceAll(\" \", \"_\")] = \"\";\n      } else if (currentValue.type === \"checkbox\" || currentValue.type === \"selectboxes\") {\n        accumulater[currentValue.label.replaceAll(\" \", \"_\")] = [];\n      } else if (\n        currentValue.type !== \"button\" &&\n        currentValue.type !== \"datetime\" &&\n        currentValue.type !== \"checkbox\"\n      ) {\n        accumulater[currentValue.label.replaceAll(\" \", \"_\")] = \"\";\n      }\n      return accumulater;\n    }, {});\n  };\n\n  return `\n    import React, { useState } from \"react\";\n    import axios from \"axios\";\n    import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\n    \n    const Add = ({ isOpen, toggle, getData }) => {\n     \n      const [form, setForm] = useState(${JSON.stringify(formObj())});\n\n\n      const handleChange = (e) => {\n        setForm((prevData) => {\n          const { name, value, type, checked } = e.target;\n      \n          if (type === \"checkbox\") {\n            if (checked) {\n              // Add the value to the array\n              const updatedArray = prevData[name] ? [...prevData[name], value] : [value];\n              return { ...prevData, [name]: updatedArray };\n            } else {\n              // Remove the value from the array\n              return {\n                ...prevData,\n                [name]: prevData[name].filter((item) => item !== value),\n              };\n            }\n          } else {\n            return { ...prevData, [name]: value };\n          }\n        });\n      };\n      \n\n      const handleSubmit = () => {\n        axios\n          .post(process.env.REACT_APP_BASE_URL + \"savecruds\", form)\n          .then((result) => {\n            getData();\n            close();\n          })\n          .catch((error) => {\n            console.log(\"Error\", error);\n          });\n      };\n\n      const close = ()=>{\n        toggle();\n        setForm(${JSON.stringify(formObj())});\n      }\n      \n      return (\n        <Modal isOpen={isOpen} toggle={close}>\n          <ModalHeader>\n            Add\n          </ModalHeader>\n          <ModalBody>\n          <div>\n          ${json.length > 0 &&\n    json\n      .map((item, index) => {\n        if (item.type && item.type !== \"button\") {\n          const inputType =\n            item.type === \"phoneNumber\" ? \"number\" : item.type;\n          const isRequired = item.validate && item.validate.required;\n          const requiredMarkup =\n            isRequired == true ? (\n              <span style={{ color: \"red\" }}>*</span>\n            ) : (\n              \"\"\n            );\n\n          if (item.type === \"datetime\") {\n            return `\n          <div>\n          <label className=\"d-inline-block mt-2\">\n          ${item.label}\n          ${requiredMarkup}\n          \n          </label>\n          <input\n          type=\"datetime-local\"\n          className=\"d-block mt-2 w-100 p-1\"\n          onChange={handleChange}\n          name=\"${item.label.replaceAll(\" \", \"_\")}\"\n          id=\"${item.label.replaceAll(\" \", \"_\")}\"\n          />\n          </div>`;\n          }\n          if (item.type === \"select\") {\n            return `\n          <div>\n          <label className=\"d-inline-block mt-2\">${item.label}</label>\n          <select\n          className=\"form-control\"\n          onChange={handleChange}\n          name=\"${item.label.replaceAll(\" \", \"_\")}\"\n          className=\"d-block mt-2 w-100 p-1\"\n          >\n          <option value=\"\">Please choose an option</option>\n          ${item.data.values\n                ? item.data.values.map(\n                  (itm) => `<option value=\"${itm.value}\">${itm.label}</option>`\n                )\n                : \"\"\n              }\n          </select>\n          </div>`;\n          }\n          if (item.inputType === \"checkbox\") {\n            return `\n          <div>\n          <label className=\"d-inline-block mt-2\"> ${item.label}</label>\n          <div className=\"d-flex mt-2 flex-wrap\">\n          ${item?.values\n                ? item?.values\n                  ?.map(\n                    (itm) =>\n                      `<div className=\"form-check w-25 mt-2\">\n          <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          onChange={handleChange}\n          name=\"${item.label.replaceAll(\" \", \"_\")}\"\n          value=\"${itm.value}\"\n          id=\"${itm.value}\"\n          />\n          \n          <label className=\"d-inline-block\">${itm.label}</label> </div>`\n                  )\n                  .join(\"\")\n                : \"\"\n              }\n          </div>\n          </div>`;\n          }\n          if (item.type === \"radio\") {\n            return `\n          <div className=\"mt-2\">\n          <label>${item.label}</label>\n          <div className=\"d-flex flex-wrap\">\n          ${item.values\n                ? item.values\n                  .map(\n                    (itm) =>\n                      `\n          <div className=\"w-25 mt-2\">\n          <input type=\"${item.type}\" id=\"${itm.value\n                      }\" name=\"${item.label.replaceAll(\" \", \"_\")}\" value=\"${itm.value\n                      }\" onChange={handleChange} className=\"me-2\"/>\n          <label for=\"${itm.value}\">${itm.label}</label>\n          </div>\n          `\n                  )\n                  .join(\"\")\n                : \"\"\n              }\n          </div>\n          </div>`;\n          }\n          if (item.type === \"textarea\") {\n            return `<div>\n          <label className=\"d-inline-block mt-2\">${item.label}</label>\n          <textarea className=\"d-block mt-2 w-100 p-1\" \n          onChange={handleChange}\n          name=\"${item.label.replaceAll(\" \", \"_\")}\"\n          placeholder=\"Enter ${item.label}\" >\n          </textarea>\n          </div>`;\n          }\n          if (item.type === \"selectboxes\") {\n            return `\n           <div className=\"mt-2\">\n           <label>${item.label}</label>\n           <div className=\"d-flex mt-2 flex-wrap\">\n           ${item.values\n                ? item.values\n                  .map(\n                    (itm) =>\n                      `\n           <div className=\"form-check me-5\">\n           <input type=\"${item.inputType}\" id=\"${itm.value\n                      }\" className=\"form-check-input\" name=\"${itm.label.replaceAll(\n                        \" \",\n                        \"_\"\n                      )}\" onChange={handleChange} />\n          <label className=\"d-inline-block\">${itm.label}</label>\n          </div>\n          // `\n                  )\n                  .join(\"\")\n                : \"\"\n              }          \n          </div>\n          </div>`;\n          } else {\n            return `\n          <div>\n          <label className=\"d-inline-block mt-2\">${item.label}</label>\n          <input\n          type=\"${inputType}\"\n          placeholder=\"Enter ${item.label}\"\n          className=\"d-block mt-2 w-100 p-1\"\n          onChange={handleChange}\n          name=\"${item.label.replaceAll(\" \", \"_\")}\"\n          />\n          </div>`;\n          }\n        }\n        return null;\n      })\n      .join(\"\")\n    }\n          </div>\n          \n          </ModalBody>\n          <ModalFooter>\n          <Button onClick={close} color=\"danger\">Close</Button>\n          <Button onClick={handleSubmit} color=\"success\">Submit</Button>\n          </ModalFooter>\n        </Modal>\n      );\n    };\n    \n    export default Add;\n  `;\n};\n\nexport default addComponentCode;\n","const editComponentCode = (json) => `\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\n\nconst Edit = ({ isOpen, toggle, getData, id }) => {\n\n  const [form, setForm] = useState({});\n  \n  const handleChange = (e) => {\n    setForm((prevData) => {\n      const { name, value, type, checked } = e.target;\n  \n      if (type === \"checkbox\") {\n        const updatedArray = checked\n          ? [...(prevData[name] || []), value]\n          : (prevData[name] || []).filter((item) => item !== value);\n\n        return { ...prevData, [name]: updatedArray };\n      } else if (type === \"radio\") {\n        return { ...prevData, [name]: value };\n      } else {\n        return { ...prevData, [name]: value };\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      getEdit();\n    }\n  }, [isOpen]);\n\n  const getEdit = () => {\n    axios\n      .get(process.env.REACT_APP_BASE_URL + \"editcruds/\" + id)\n      .then((item) => {\n        const formData = item.data.data;\n        setForm(formData);\n      })\n      .catch((error) => console.log(687, error));\n  };\n\n  const handleSubmit = () => {\n    axios\n      .post(process.env.REACT_APP_BASE_URL + \"updatecruds/\" + id, form)\n      .then((result) => {\n        console.log(\"successfully Updated\", result);\n        toggle();\n        getData(); \n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader>Edit</ModalHeader>\n        <ModalBody>\n          <div>\n            ${json.length > 0 &&\n              json\n                .map((item, index) => {\n                  if (item.type && item.type !== \"button\") {\n                    const inputType = item.type === \"phoneNumber\" ? \"number\" : item.type;\n                    if (item.type === \"datetime\") {\n                      return `\n                        <div>\n                          <label className=\"d-inline-block mt-2\">${item.label}</label>\n                          <input\n                            type=\"datetime-local\"\n                            className=\"d-block mt-2 w-100 p-1\"\n                            onChange={handleChange}\n                            name=\"${item.label.replaceAll(\" \", \"_\")}\"\n                            value={form.${item.label.replaceAll(\" \", \"_\")}}\n                            id=\"Checkbox\"\n                          />\n                        </div>`;\n                    }\n                    if (item.type === \"select\") {\n                      return `\n                        <div>\n                          <label className=\"d-inline-block mt-2\">${item.label}</label>\n                          <select\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            name=\"${item.label.replaceAll(\" \", \"_\")}\"\n                            value={form[\"${item.label.replaceAll(\" \", \"_\")}\"]}\n                          >\n                            <option value=\"\">Please choose an option</option>\n                            ${item.data.values\n                              ? item.data.values\n                                  .map(\n                                    (itm) => `<option value=\"${itm.value}\">${itm.label}</option>`\n                                  )\n                                  .join(\"\")\n                              : \"\"}\n                          </select>\n                        </div> \n                      `;\n                    }\n                    if (item.type === \"checkbox\") {\n                      return `\n                        <div>\n                          <label className=\"d-inline-block mt-2\">${item.label}</label>\n                          <div className=\"d-flex mt-2 flex-wrap\">\n                            ${item?.values\n                              ?.map(\n                                (ele) => `\n                                <div className=\"form-check me-5\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input\"\n                                  onChange={handleChange}\n                                  name=\"${item.label.replaceAll(\" \", \"_\")}\"\n                                  value=\"${ele.value}\"\n                                  checked={form?.${[item.label.replaceAll(\" \", \"_\")]}?.includes(\"${ele.value}\") || false}\n                                  id=\"${ele.value}\"\n                                />\n                                <label className=\"d-inline-block\">${ele.label}</label>\n                              </div>\n                                `\n                              )\n                              .join(\"\")}\n                          </div>\n                        </div>`;\n                    }\n\n                    if (item.type === \"selectboxes\") {\n                      return `\n                        <div className=\"mt-2\">\n                          <label>${item.label}</label>\n                          <div className=\"d-flex mt-2 flex-wrap\">\n                            ${item.values\n                              ? item.values\n                                  .map(\n                                    (itm) => `\n                                      <div className=\"form-check me-5\">\n                                        <input\n                                          type=\"${item.inputType}\"\n                                          id=\"${itm.value}\"\n                                          value=\"${itm.value}\"\n                                          className=\"form-check-input\"\n                                          name=\"${item.label.replaceAll(\" \", \"_\")}\"\n                                          onChange={handleChange}\n                                          checked={form?.${[item.label.replaceAll(\" \", \"_\")]}?.includes(\"${itm.value}\") || false}\n                                        />\n                                        <label className=\"d-inline-block\">${itm.label}</label>\n                                      </div>`\n                                  )\n                                  .join(\"\")\n                              : \"\"}\n                          </div>\n                        </div>`; \n                       } \n        \n                    if (item.type === \"radio\") {\n                      return `\n                        <div className=\"mt-2\">\n                          <label>${item.label}</label>\n                          <div className=\"d-flex flex-wrap\">\n                            ${item.values\n                              ? item.values\n                                  .map(\n                                    (itm) => `\n                                      <div className=\"me-5 mt-2\">\n                                        <input\n                                          type=\"${item.type}\"\n                                          id=\"${itm.value}\"\n                                          name=\"${item.label.replaceAll(\" \", \"_\")}\"\n                                          checked={form?.${[item.label.replaceAll(\" \", \"_\")]} === \"${itm.value}\"}\n                                          onChange={handleChange}\n                                          value=\"${itm.value}\"\n                                          className=\"me-2\"\n                                        />\n                                        <label for=\"${itm.value}\">${itm.label}</label>\n                                      </div>          \n                                  ` )\n                                  .join(\"\")\n                              : \"\"\n                            }\n                        </div>\n                      </div>`;\n                    }\n                    if (item.type === \"textarea\") {\n                      return `<div>\n                          <label className=\"d-inline-block mt-2\">${item.label}</label>\n                          <textarea className=\"d-block mt-2 w-100 p-1\" \n                          onChange={handleChange}\n                          name=\"${item.label.replaceAll(\" \", \"_\")}\" \n                          placeholder=\"Enter ${item.label}\" \n                          value={form.${item.label.replaceAll(\" \", \"_\")}}\n                          >\n                          </textarea>\n                          </div>`;\n                    }\n                    else {\n                      return `\n                          <div>\n                            <label className=\"d-inline-block mt-2\">${item.label}</label>\n                            <input\n                              type=\"${inputType}\"\n                              placeholder=\"Enter ${item.label}\"\n                              onChange={handleChange}\n                              name=\"${item.label.replaceAll(\" \", \"_\")}\"\n                              value={form.${item.label.replaceAll(\" \", \"_\")}}\n                              className=\"d-block mt-2 w-100 p-1\"\n                            />\n                          </div>`;\n                    }\n                  }\n                  return null;\n                })\n                .join(\"\")\n            }\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={toggle} color=\"danger\">Close</Button>\n          <Button onClick={handleSubmit} color=\"success\">Update</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Edit;\n`;\n\nexport default editComponentCode;\n","const deleteComponentCode = () => `\n    import React, { useState } from \"react\";\n    import axios from \"axios\";\n    import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\n\n    const Delete = ({ isOpen, toggle, getData, id }) => {\n\n      const handleSubmit = () => {\n        axios\n        .delete(process.env.REACT_APP_BASE_URL + \"deletecruds/\" + id)\n          .then(() => {\n            getData();\n            toggle();\n          })\n          .catch((error) => console.log(687, error));\n      };\n      return(\n        <>\n        <Modal isOpen={isOpen} toggle={toggle}>\n          <ModalHeader>Delete</ModalHeader>\n          <ModalBody>Are you sure you want to delete this record?</ModalBody>\n          <ModalFooter>\n          <Button color=\"danger\" onClick={toggle}>No</Button>\n          <Button color=\"success\" onClick={handleSubmit}>Yes</Button>\n          </ModalFooter>\n        </Modal>\n        </>\n          );\n          };\n        export default Delete;\n  `;\nexport default deleteComponentCode;\n","const packageData = () => (`{\n  \"name\": \"myapp\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@testing-library/jest-dom\": \"^5.17.0\",\n    \"@testing-library/react\": \"^13.4.0\",\n    \"@testing-library/user-event\": \"^13.5.0\",\n    \"axios\": \"^1.6.2\",\n    \"bootstrap\": \"^5.3.2\",\n    \"react\": \"^18.2.0\",\n    \"react-bootstrap\": \"^2.9.1\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-router-dom\": \"^6.21.0\",\n    \"react-scripts\": \"5.0.1\",\n    \"reactstrap\": \"^9.2.1\",\n    \"web-vitals\": \"^2.1.4\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n`);\n\nexport default packageData;","const htmlFile = () => `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n   \n    <title>React App</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>`;\n\nexport default htmlFile;\n","\nconst IndexFile = () => `\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  rootElement\n);`;\n\nexport default IndexFile;\n","import React from \"react\";\nconst mainIndexFile = (json) => `\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport Add from \"./Add/index\";\nimport Edit from \"./Edit/index\";\nimport Delete from \"./Delete/index\";\n\nfunction Index({ json }) {\n  const [data, setData] = useState([]);\n  const [toggle, settoggle] = useState(false);\n  const [edittoggle, setEditToggle] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [deleteToggle, setDeleteToggle] = useState(false);\n  const [delId, setDelId] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .post(process.env.REACT_APP_BASE_URL + \"getcruds\")\n      .then((item) => {\n        let newData = JSON.parse(JSON.stringify(item.data.data));\n        let index = -1;\n        for (let obj of newData) {\n          index++;\n          for (let key in obj) {\n            if (Array.isArray(obj[key])) {\n              let array = [];\n              let length = obj[key].length;\n              obj[key].map((element, j) => {\n                if (length - 1 != j) {\n                  array.push((element += \", \"));\n                } else array.push(element);\n              });\n              newData[index][key] = array;\n            }\n          }\n        }\n        setData(newData);\n     \n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const openAddModal = () => {\n    settoggle(true);\n  };\n\n  const closeAddModal = () => {\n    settoggle(false);\n  };\n\n  const openEditModal = () => {\n    setEditToggle(true);\n  };\n\n  const closeEditModal = () => {\n    setEditToggle(false);\n  };\n\n  const closeDeleteModal = () => {\n    setDeleteToggle(false);\n  };\n\n  const editModelToggle = (id) => {\n    setEditToggle(true);\n    setId(id);\n  };\n\n  const deleteModelToggle = (id) => {\n    setDeleteToggle(true);\n    setDelId(id);\n  };\n\n  return (\n    <div className=\"container\">\n      <div style={{ display: \"flex\" }} className=\"mb-2 mt-2\">\n        <Button style={{ marginRight: \"8px\" }} color=\"primary\" onClick={openAddModal}>\n          Add\n        </Button>\n      </div>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n          <th>Id</th>\n           ${json\n             .map((item) => {\n               if (item.key != \"submit\")\n                 return \"<th>\" + `${item.label}` + \"</th>\";\n             })\n             .join(\"\")}\n           <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, index) => (\n            <tr key={index}>\n            {Object.values(item).slice(0,-2).map((element,num)=>{ \n              if(num == 0) return <td>{index + 1}</td>\n                return <td>{element}</td>\n              })}\n              <td className=\"d-flex flex-nowrap\">\n                <Button\n                  color=\"success\"\n                  onClick={() => editModelToggle(item._id)}\n                  className=\"me-2\"\n                >\n                  Edit\n                </Button>\n                <Button\n                  color=\"danger\"\n                  onClick={() => deleteModelToggle(item._id)}\n                >\n                  Delete\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <Add\n        isOpen={toggle}\n        toggle={closeAddModal}\n        getData={getData}\n        json={json}\n      />\n      <Edit\n        isOpen={edittoggle}\n        toggle={closeEditModal}\n        getData={getData}\n        id={id}\n        json={json}\n      />\n      <Delete\n        isOpen={deleteToggle}\n        toggle={closeDeleteModal}\n        getData={getData}\n        id={delId}\n        json={json}\n      />\n    </div>\n  );\n}\nexport default Index;\n`;\nexport default mainIndexFile;\n","const app = () => `\nimport React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Index from \"./components\";\n\nconst App = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Index />} />\n    </Routes>\n  );\n};\n\nexport default App;\n  `;\nexport default app;\n","const envComponentCode = () => `REACT_APP_BASE_URL= http://localhost:5000/cruds/`;\nexport default envComponentCode;","import React, { useState } from \"react\";\nimport { formIoData } from \"../consts.js\";\nimport { FormBuilder as FormBuilderIo, Formio } from \"react-formio\";\nimport addComponentCode from \"../utilities/add.js\";\nimport editComponentCode from \"../utilities/edit.js\";\nimport deleteComponentCode from \"../utilities/delete.js\";\nimport packageData from \"../utilities/package.js\";\nimport htmlFile from \"../utilities/htmlFile.js\";\nimport IndexFile from \"../utilities/IndexFile.js\";\nimport mainIndexFile from \"../utilities/main.js\";\nimport app from \"../utilities/app.js\";\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport envComponentCode from \"../utilities/env.js\";\n\nexport default function Main() {\n  const [formData, setFormData] = useState(formIoData);\n\n  const printResult = () => {\n    Formio.createForm(document.getElementById(\"formio-result\"), {\n      components: formData.components,\n    }).then((form) => {\n      let uniqueFieldMake = [...form.component.components];\n      uniqueFieldMake.map((item, i) => {\n        let count = 1;\n        uniqueFieldMake.filter((element, j) => {\n          if (i != j && element.label == item.label) {\n            element.label += count++;\n          }\n        });\n      });\n      setJsonToBackend(uniqueFieldMake);\n      downloadDynamicCode(uniqueFieldMake);\n      form.on(\"submit\", (data) => console.log(\"submit\", data));\n    });\n  };\n  const getCircularReplacer = () => {\n    const seen = new WeakSet();\n    return (key, value) => {\n      if (typeof value === \"object\" && value !== null) {\n        if (seen.has(value)) {\n          return;\n        }\n        seen.add(value);\n      }\n      return value;\n    };\n  };\n  const setJsonToBackend = async (json) => {\n    json.map((item) => {\n      item.label = item.label.replace(/Date \\/ Time/g, \"Date Time\");\n      return item;\n    }, []);\n    console.log(213, json);\n    console.log(\n      \"isRequired\",\n      json.map((item) => item.validate).map((itm) => itm.required)\n    );\n    const result = JSON.stringify(json, getCircularReplacer());\n    await axios\n      .post(\"https://api-dynamic-crudoperation.imenso.in/users/getCrud\", {\n        data: JSON.parse(result),\n      })\n      .then((response) => {\n        const firstName = response.data.data;\n        window.location.href = `https://api-dynamic-crudoperation.imenso.in/${firstName}`;\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const downloadDynamicCode = async (json) => {\n    const zip = new JSZip();\n\n    zip.file(\"src/components/Add/index.js\", addComponentCode(json));\n    zip.file(\"src/components/Edit/index.js\", editComponentCode(json));\n    zip.file(\"src/components/Delete/index.js\", deleteComponentCode());\n    zip.file(\"src/components/index.js\", mainIndexFile(json));\n    zip.file(\"package.json\", packageData());\n    zip.file(\"public/index.html\", htmlFile());\n    zip.file(\"src/index.js\", IndexFile());\n    zip.file(\"src/App.js\", app());\n    zip.file(\".env\", envComponentCode());\n\n    const content = await zip.generateAsync({ type: \"blob\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(content);\n    link.download = \"FrontendCode.zip\";\n    link.click();\n  };\n\n  return (\n    <div>\n      <div>\n        <div style={{ textAlign: \"right\" }}>\n          <button\n            className=\"green mr-5 mt-4\"\n            onClick={printResult}\n            id=\"helloworld\"\n          >\n            Download Now\n          </button>\n        </div>\n\n        <div className=\"mr-5\">\n          <FormBuilderIo\n            form={formIoData}\n            saveForm={(data) => setFormData(data)}\n          />\n        </div>\n        <div style={{ display: \"none\" }}>\n          <div id=\"formio-result\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Main from \"../pages\";\n\nconst PublicRoutes = () => {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Main />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default PublicRoutes;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\n// import MenuItem from \"@mui/material/MenuItem\";\nimport AdbIcon from \"@mui/icons-material/Adb\";\n\n// const pages = [\"Products\", \"Pricing\", \"Blog\"];\n// const settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nfunction ResponsiveAppBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon\n            sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1, fontSize: 25 }}\n          />\n         <Typography\n    variant=\"h6\"\n    noWrap\n    sx={{\n        mr: 2,\n        display: { xs: \"none\", md: \"flex\" },\n        fontFamily: \"monospace\",\n        fontWeight: 700,\n        letterSpacing: \".3rem\",\n        color: \"inherit\",\n        textDecoration: \"none\",\n        fontSize: 25,\n    }}\n>\n    Form-builder\n</Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n              }}\n            >\n              {/* {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))} */}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            // component=\"a\"\n            // href=\"#app-bar-with-responsive-menu\"\n            sx={{\n              mr: 2,\n              display: { xs: \"flex\", md: \"none\" },\n              flexGrow: 1,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            LOGO\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {/* {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: \"white\", display: \"block\", fontSize: 15 }}\n              >\n                {page}\n              </Button>\n            ))} */}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              {/* <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton> */}\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {/* {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))} */}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default ResponsiveAppBar;\n","import React from \"react\";\nimport ResponsiveAppBar from \"../NavBar\";\n\nconst Layout = ({ children }) => {\n  return (\n    <div>\n      <ResponsiveAppBar />\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PublicRoutes from \"./publicRoutes\";\nimport Layout from \"../components/Layout\";\n\nconst Index = () => {\n  return (\n    <>\n    <Layout>\n      <PublicRoutes />\n    </Layout>\n    </>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\r\nimport Index from \"./Routes\";\r\n\r\nconst App = () => {\r\n  return <Index />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"formiojs/dist/formio.full.css\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}